<?xml version="1.0"?>
<odoo>
    
    <record id="crm_flow_actividad_correo" model="base.automation">
            <field name="name">Actividad de Enviar Correo</field>
            <field name="model_id" eval="ref('crm.model_crm_lead')"/>
            <field name="state">code</field>
            <field name="trigger">on_time</field>
            <field name="trg_date_id" ref="crm.field_crm_lead__activity_date_deadline"/>
            <field name="trg_date_range">0</field>
            <field name="trg_date_range_type">minutes</field>
            <field name="code">lead_id = env['crm.lead'].search([('name','=',record.name)])
if lead_id:
  if lead_id.activity_type_id:
    if lead_id.activity_type_id.plantillas_ids:
      for plantilla in lead_id.activity_type_id.plantillas_ids:
        domain = env['crm.lead'].eval_dominio(plantilla.filter_domain)
        lead_dominio = env['crm.lead'].search(domain)
        if lead_id in lead_dominio:
          plantilla.plantilla_id.send_mail(record.id, force_send=True, raise_exception=True)
            </field>
        </record>
    
    
    <record id="crm_flow_cita_agendada" model="base.automation">
            <field name="name">Cambiar oportunidad a cita agendada</field>
            <field name="model_id" eval="ref('calendar.model_calendar_event')"/>
            <field name="state">code</field>
            <field name="trigger">on_create</field>
            <field name="code">event_id = env['calendar.event'].search([('name','=',record.name)])
if event_id:
  if event_id.opportunity_id:
    stage_id = env['crm.stage'].search([('cita_agendada','=',True)])
    lead_ids = env['crm.lead'].search([('id','=',event_id.opportunity_id.id)])
    for lead in lead_ids:
      lead.write({'stage_id': stage_id.id})
            </field>
        </record>

</odoo>
